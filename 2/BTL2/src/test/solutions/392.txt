Program([FuncDecl(Id(isEven), [VarDecl(Id(n), NumberType, None, None)], Return(BinaryOp(=, BinaryOp(%, Id(n), NumLit(2.0)), NumLit(0.0)))), FuncDecl(Id(isPositive), [VarDecl(Id(n), NumberType, None, None)], Return(BinaryOp(>, Id(n), NumLit(0.0)))), FuncDecl(Id(main), [], Block([VarDecl(Id(num), NumberType, None, NumLit(8.0)), If((BinaryOp(and, CallExpr(Id(isEven), [Id(num)]), CallExpr(Id(isPositive), [Id(num)])), CallStmt(Id(printString), [StringLit(Even and Positive)])), [(BinaryOp(and, UnaryOp(not, CallExpr(Id(isEven), [Id(num)])), CallExpr(Id(isPositive), [Id(num)])), CallStmt(Id(printString), [StringLit(Odd and Positive)]))], CallStmt(Id(printString), [StringLit(Not Odd and Positive)]))]))])